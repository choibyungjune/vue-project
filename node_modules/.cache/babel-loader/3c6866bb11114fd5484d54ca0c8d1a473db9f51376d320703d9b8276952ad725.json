{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Login\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(\" DB Connect page \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createTextVNode(\" User: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user = $event),\n    type: \"text\",\n    placeholder: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user]]), _hoisted_1, _createTextVNode(\" Password: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"text\",\n    placeholder: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_2, _createTextVNode(\" Host: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.host = $event),\n    type: \"text\",\n    placeholder: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.host]]), _hoisted_3, _createTextVNode(\" Port: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.port = $event),\n    type: \"password\",\n    placeholder: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.port]]), _hoisted_4, _hoisted_5], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";gCAKMA,oBAAM;gCAGNA,oBAAM;gCAENA,oBAAM;gCAGNA,oBAAM;gCACNA,oBAAoC;EAA5BC,IAAI,EAAC;AAAQ,GAAC,OAAK;;;uBAb/BC,oBAeM,+BAfD,mBAEH,uBAYO;IAZAC,QAAM,wDAAUC,uDAAY;uBAAE,SAC7B,uCAAmD;+DAAnCC,UAAI;IAAEJ,IAAI,EAAC,MAAM;IAACK,WAAW,EAAC;iDAA9BD,UAAI,KAC1BE,UAAM,gCAEN,uCAAuD;+DAAvCF,cAAQ;IAAEJ,IAAI,EAAC,MAAM;IAACK,WAAW,EAAC;iDAAlCD,cAAQ,KACxBG,UAAM,4BACA,uCAAmD;+DAAnCH,UAAI;IAAEJ,IAAI,EAAC,MAAM;IAACK,WAAW,EAAC;iDAA9BD,UAAI,KAC1BI,UAAM,4BAEN,uCAAuD;+DAAvCJ,UAAI;IAAEJ,IAAI,EAAC,UAAU;IAACK,WAAW,EAAC;iDAAlCD,UAAI,KACpBK,UAAM,EACNC,UAAoC","names":["_createElementVNode","type","_createElementBlock","onSubmit","$options","$data","placeholder","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["C:\\Users\\Yonsei\\Desktop\\vue4hour\\project\\src\\views\\DBConnectView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    DB Connect page\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      User: <input v-model=\"user\" type=\"text\" placeholder=\"\" />\r\n      <br />\r\n      Password:\r\n      <input v-model=\"password\" type=\"text\" placeholder=\"\" />\r\n      <br />\r\n      Host: <input v-model=\"host\" type=\"text\" placeholder=\"\" />\r\n      <br />\r\n      Port:\r\n      <input v-model=\"port\" type=\"password\" placeholder=\"\" />\r\n      <br />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: '',\r\n      password: '',\r\n      host: '',\r\n      port: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n          usertype: this.usertype\r\n        })\r\n        console.log(response)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}