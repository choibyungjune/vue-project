{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Admin\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Manager\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", null, \"User\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_3, _hoisted_4, _hoisted_5];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Login\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(\" Login page \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.usertype = $event)\n  }, _hoisted_6, 512 /* NEED_PATCH */), [[_vModelSelect, $data.usertype]]), _hoisted_7, _hoisted_8], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";gCAKMA,oBAAM;gCAENA,oBAAM;gCAEJA,oBAAsB,gBAAd,OAAK;gCACbA,oBAAwB,gBAAhB,SAAO;gCACfA,oBAAqB,gBAAb,MAAI;oBAFZC,UAAsB,EACtBC,UAAwB,EACxBC,UAAqB;gCAEvBH,oBAAM;gCACNA,oBAAoC;EAA5BI,IAAI,EAAC;AAAQ,GAAC,OAAK;;;uBAb/BC,oBAeM,+BAfD,cAEH,uBAYO;IAZAC,QAAM,wDAAUC,uDAAY;sBACjCP,oBAA0D;+DAA1CQ,WAAK;IAAEJ,IAAI,EAAC,OAAO;IAACK,WAAW,EAAC;iDAAhCD,WAAK,KACrBE,UAAM,kBACNV,oBAAmE;+DAAnDQ,cAAQ;IAAEJ,IAAI,EAAC,UAAU;IAACK,WAAW,EAAC;iDAAtCD,cAAQ,KACxBG,UAAM,kBACNX,oBAIS;+DAJQQ,cAAQ;yDAARA,cAAQ,KAKzBI,UAAM,EACNC,UAAoC","names":["_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","type","_createElementBlock","onSubmit","$options","$data","placeholder","_hoisted_1","_hoisted_2","_hoisted_7","_hoisted_8"],"sourceRoot":"","sources":["C:\\Users\\Yonsei\\Desktop\\vue4hour\\project\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    Login page\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" />\r\n      <br />\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\r\n      <br />\r\n      <select v-model=\"usertype\">\r\n        <option>Admin</option>\r\n        <option>Manager</option>\r\n        <option>User</option>\r\n      </select>\r\n      <br />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      usertype: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n          usertype: this.usertype\r\n        })\r\n        console.log(response)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<!--\r\n<script>\r\nimport axios from 'axios'\r\nimport Alert from './Alert.vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      addBookForm: {\r\n        title: '',\r\n        author: '',\r\n        read: []\r\n      },\r\n      message: '',\r\n      showMessage: false,\r\n      editForm: {\r\n        id: '',\r\n        title: '',\r\n        author: '',\r\n        read: []\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    alert: Alert\r\n  },\r\n  methods: {\r\n    getBooks() {\r\n      const path = 'http://localhost:5000/books'\r\n      axios\r\n        .get(path)\r\n        .then((res) => {\r\n          this.books = res.data.books\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error)\r\n        })\r\n    },\r\n    addBook(payload) {\r\n      const path = 'http://localhost:5000/books'\r\n      axios\r\n        .post(path, payload)\r\n        .then(() => {\r\n          this.getBooks()\r\n          this.message = 'User added!'\r\n          this.showMessage = true\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.log(error)\r\n          this.getBooks()\r\n        })\r\n    },\r\n    initForm() {\r\n      this.addBookForm.title = ''\r\n      this.addBookForm.author = ''\r\n      this.addBookForm.read = []\r\n      this.editForm.id = ''\r\n      this.editForm.title = ''\r\n      this.editForm.author = ''\r\n      this.editForm.read = []\r\n    },\r\n    onSubmit(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.addBookModal.hide()\r\n      let read = false\r\n      if (this.addBookForm.read[0]) read = true\r\n      const payload = {\r\n        title: this.addBookForm.title,\r\n        author: this.addBookForm.author,\r\n        read // property shorthand\r\n      }\r\n      this.addBook(payload)\r\n      this.initForm()\r\n    },\r\n    onReset(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.addBookModal.hide()\r\n      this.initForm()\r\n    },\r\n    editBook(book) {\r\n      this.editForm = book\r\n    },\r\n    onSubmitUpdate(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.editBookModal.hide()\r\n      let read = false\r\n      if (this.editForm.read[0]) read = true\r\n      const payload = {\r\n        title: this.editForm.title,\r\n        author: this.editForm.author,\r\n        read\r\n      }\r\n      this.updateBook(payload, this.editForm.id)\r\n    },\r\n    updateBook(payload, bookID) {\r\n      const path = `http://localhost:5000/books/${bookID}`\r\n      axios\r\n        .put(path, payload)\r\n        .then(() => {\r\n          this.getBooks()\r\n          this.message = 'User info updated!'\r\n          this.showMessage = true\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error)\r\n          this.getBooks()\r\n        })\r\n    },\r\n    onResetUpdate(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.editBookModal.hide()\r\n      this.initForm()\r\n      this.getBooks() // why?\r\n    },\r\n    removeBook(bookID) {\r\n      const path = `http://localhost:5000/books/${bookID}`\r\n      axios\r\n        .delete(path)\r\n        .then(() => {\r\n          this.getBooks()\r\n          this.message = 'User info deleted!'\r\n          this.showMessage = true\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error)\r\n          this.getBooks()\r\n        })\r\n    },\r\n    onDeleteBook(book) {\r\n      this.removeBook(book.id)\r\n    }\r\n  },\r\n  created() {\r\n    this.getBooks()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.margin-button {\r\n  margin-right: 5px; /* Adjust the value as per your requirement*/\r\n}\r\n</style> -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}