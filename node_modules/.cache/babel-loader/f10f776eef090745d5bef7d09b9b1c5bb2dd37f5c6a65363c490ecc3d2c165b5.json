{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fileNames, fileName => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: fileName\n    }, _toDisplayString(fileName), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.checkColumn && $options.checkColumn(...args))\n  }, \"Check Column\")]);\n}","map":{"version":3,"mappings":";gCAKIA,oBAAM;;;uBAJRC,oBAMM,cALJD,oBAEK,gCADHC,oBAAqEC,6BAA9BC,eAAS,EAArBC,QAAQ;yBAAnCH,oBAAqE;MAAhEI,GAAG,EAAED;IAAQ,oBAAmCA,QAAQ;oCAE/DE,UAAM,EACNN,oBAAkD;IAAzCO,OAAK,yCAAEC,qDAAW;KAAE,cAAY","names":["_createElementVNode","_createElementBlock","_Fragment","$data","fileName","key","_hoisted_1","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\Yonsei\\Desktop\\data-management\\vue-front\\src\\views\\ColumnNameView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ul>\r\n      <li :key=\"fileName\" v-for=\"fileName in fileNames\">{{ fileName }}</li>\r\n    </ul>\r\n    <br />\r\n    <button @click=\"checkColumn\">Check Column</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  mounted() {\r\n    this.fetchFileName()\r\n  },\r\n  methods: {\r\n    async fetchFileName() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/file-name')\r\n        this.fileNames = response.data\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n    async checkColumn() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/columnname')\r\n        console.log(response.data)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      fileNames: ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}