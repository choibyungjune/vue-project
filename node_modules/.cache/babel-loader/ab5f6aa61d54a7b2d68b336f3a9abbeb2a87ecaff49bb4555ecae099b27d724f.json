{"ast":null,"code":"export default {\n  components: {},\n  data() {\n    return {\n      sampleData: ''\n    };\n  },\n  setup() {},\n  created() {},\n  mounted() {},\n  unmounted() {},\n  methods: {\n    doSearch() {\n      console.log(this.searchText);\n    },\n    checkEnter(event) {\n      if (event.keyCode === 13) {\n        this.doSearch();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoBA,eAAe;EACbA,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,KAAK,GAAG,CAAC,CAAC;EACVC,OAAO,GAAG,CAAC,CAAC;EACZC,OAAO,GAAG,CAAC,CAAC;EACZC,SAAS,GAAG,CAAC,CAAC;EACdC,OAAO,EAAE;IACPC,QAAQ,GAAG;MACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU;IAC7B,CAAC;IACDC,UAAU,CAACC,KAAK,EAAE;MAChB,IAAIA,KAAK,CAACC,OAAM,KAAM,EAAE,EAAE;QACxB,IAAI,CAACN,QAAQ,EAAC;MAChB;IACF;EACF;AACF","names":["components","data","sampleData","setup","created","mounted","unmounted","methods","doSearch","console","log","searchText","checkEnter","event","keyCode"],"sourceRoot":"","sources":["C:\\Users\\Yonsei\\Desktop\\vue4hour\\project\\src\\views\\BookView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <input\r\n        type=\"search\"\r\n        name=\"\"\r\n        id=\"\"\r\n        @keyup=\"checkEnter($event)\"\r\n        v-model=\"searchText\"\r\n      /> -->\r\n    <input\r\n      type=\"search\"\r\n      name=\"\"\r\n      id=\"\"\r\n      @keyup.enter=\"doSearch\"\r\n      v-model=\"searchText\"\r\n    />\r\n    <button @click=\"doSearch\">조회</button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      sampleData: ''\r\n    }\r\n  },\r\n  setup() {},\r\n  created() {},\r\n  mounted() {},\r\n  unmounted() {},\r\n  methods: {\r\n    doSearch() {\r\n      console.log(this.searchText)\r\n    },\r\n    checkEnter(event) {\r\n      if (event.keyCode === 13) {\r\n        this.doSearch()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<!--\r\n<script>\r\nimport axios from 'axios'\r\nimport Alert from './Alert.vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      addBookForm: {\r\n        title: '',\r\n        author: '',\r\n        read: []\r\n      },\r\n      message: '',\r\n      showMessage: false,\r\n      editForm: {\r\n        id: '',\r\n        title: '',\r\n        author: '',\r\n        read: []\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    alert: Alert\r\n  },\r\n  methods: {\r\n    getBooks() {\r\n      const path = 'http://localhost:5000/books'\r\n      axios\r\n        .get(path)\r\n        .then((res) => {\r\n          this.books = res.data.books\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error)\r\n        })\r\n    },\r\n    addBook(payload) {\r\n      const path = 'http://localhost:5000/books'\r\n      axios\r\n        .post(path, payload)\r\n        .then(() => {\r\n          this.getBooks()\r\n          this.message = 'User added!'\r\n          this.showMessage = true\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.log(error)\r\n          this.getBooks()\r\n        })\r\n    },\r\n    initForm() {\r\n      this.addBookForm.title = ''\r\n      this.addBookForm.author = ''\r\n      this.addBookForm.read = []\r\n      this.editForm.id = ''\r\n      this.editForm.title = ''\r\n      this.editForm.author = ''\r\n      this.editForm.read = []\r\n    },\r\n    onSubmit(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.addBookModal.hide()\r\n      let read = false\r\n      if (this.addBookForm.read[0]) read = true\r\n      const payload = {\r\n        title: this.addBookForm.title,\r\n        author: this.addBookForm.author,\r\n        read // property shorthand\r\n      }\r\n      this.addBook(payload)\r\n      this.initForm()\r\n    },\r\n    onReset(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.addBookModal.hide()\r\n      this.initForm()\r\n    },\r\n    editBook(book) {\r\n      this.editForm = book\r\n    },\r\n    onSubmitUpdate(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.editBookModal.hide()\r\n      let read = false\r\n      if (this.editForm.read[0]) read = true\r\n      const payload = {\r\n        title: this.editForm.title,\r\n        author: this.editForm.author,\r\n        read\r\n      }\r\n      this.updateBook(payload, this.editForm.id)\r\n    },\r\n    updateBook(payload, bookID) {\r\n      const path = `http://localhost:5000/books/${bookID}`\r\n      axios\r\n        .put(path, payload)\r\n        .then(() => {\r\n          this.getBooks()\r\n          this.message = 'User info updated!'\r\n          this.showMessage = true\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error)\r\n          this.getBooks()\r\n        })\r\n    },\r\n    onResetUpdate(evt) {\r\n      evt.preventDefault()\r\n      this.$refs.editBookModal.hide()\r\n      this.initForm()\r\n      this.getBooks() // why?\r\n    },\r\n    removeBook(bookID) {\r\n      const path = `http://localhost:5000/books/${bookID}`\r\n      axios\r\n        .delete(path)\r\n        .then(() => {\r\n          this.getBooks()\r\n          this.message = 'User info deleted!'\r\n          this.showMessage = true\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error)\r\n          this.getBooks()\r\n        })\r\n    },\r\n    onDeleteBook(book) {\r\n      this.removeBook(book.id)\r\n    }\r\n  },\r\n  created() {\r\n    this.getBooks()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.margin-button {\r\n  margin-right: 5px; /* Adjust the value as per your requirement*/\r\n}\r\n</style> -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}